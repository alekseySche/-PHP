/* С помощью цикла while вывести все числа в промежутке от 0 до 100, 
которые делятся на 3 без остатка.*/

$i = 0;
while ($i <= 100) {
    if ($i % 3 == 0) {
        echo $i . '<br>';
    }
    $i++;
}


/* С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
0 – ноль.
1 – нечетное число.
2 – четное число.
3 – нечетное число.
…
10 – четное число. */

$i = 0;
do {
    if ($i == 0) {
        echo $i . ' - это ноль.<br>';
    } else if ($i % 2 != 0) {
        echo $i . ' - нечетное число.<br>';
    } else {
        echo $i . ' - четное число.<br>';
    }
    $i++;
} while ($i <= 10);


/* Объявить массив, в котором в качестве ключей будут использоваться названия областей, 
а в качестве значений – массивы с названиями городов из соответствующей области. 
Вывести в цикле значения массива, чтобы результат был таким:

Московская область:
Москва, Зеленоград, Клин
Ленинградская область:
Санкт-Петербург, Всеволожск, Павловск, Кронштадт
Рязанская область … (названия городов можно найти на maps.yandex.ru). */

$arr = [
    'Самарская область' => ['Самара', 'Тольятти', 'Сызрань', 'Кинель'],
    'Ростовская область' => ['Ростов-на-Дону', 'Таганрог', 'Новочеркасск', 'Азов', 'Гуково'],
    'Московская область' => ['Москва', 'Зеленоград', 'Клин'],
    'Ленинградская область' => ['Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кронштадт'],
    'Рязанская область' => ['Рязань', 'Касимов', 'Скопин', 'Сасово', 'Михайлов']
];
foreach ($arr as $key => $value) {
    echo $key . ':<br>';

    for($i = 0; $i < count($value); $i++) {
        if ($i < count($value) - 1) {
            echo $value[$i] . ', ';
        } else {
            echo $value[$i] . '<br>';
        }
    }
}


/* Объявить массив, индексами которого являются буквы русского языка,
а значениями – соответствующие латинские буквосочетания 
(‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
Написать функцию транслитерации строк. */

/**
 * Функция получает строку и заменяет кириллические символы на латинские согласно имеющейся таблице.
 * @param string $input начальные данные.
 * @return string возвращает модифицированную строку.
 */
function translit($input) {
    //Массив с символами транслитерации.
    $arr = [
        'а' => 'a',   'б' => 'b',   'в' => 'v',
        'г' => 'g',   'д' => 'd',   'е' => 'e',
        'ё' => 'e',   'ж' => 'zh',  'з' => 'z',
        'и' => 'i',   'й' => 'y',   'к' => 'k',
        'л' => 'l',   'м' => 'm',   'н' => 'n',
        'о' => 'o',   'п' => 'p',   'р' => 'r',
        'с' => 's',   'т' => 't',   'у' => 'u',
        'ф' => 'f',   'х' => 'h',   'ц' => 'c',
        'ч' => 'ch',  'ш' => 'sh',  'щ' => 'sch',
        'ь' => '\'',  'ы' => 'y',   'ъ' => '\'',
        'э' => 'e',   'ю' => 'yu',  'я' => 'ya',

        'А' => 'A',   'Б' => 'B',   'В' => 'V',
        'Г' => 'G',   'Д' => 'D',   'Е' => 'E',
        'Ё' => 'E',   'Ж' => 'Zh',  'З' => 'Z',
        'И' => 'I',   'Й' => 'Y',   'К' => 'K',
        'Л' => 'L',   'М' => 'M',   'Н' => 'N',
        'О' => 'O',   'П' => 'P',   'Р' => 'R',
        'С' => 'S',   'Т' => 'T',   'У' => 'U',
        'Ф' => 'F',   'Х' => 'H',   'Ц' => 'C',
        'Ч' => 'Ch',  'Ш' => 'Sh',  'Щ' => 'Sch',
        'Ь' => '\'',  'Ы' => 'Y',   'Ъ' => '\'',
        'Э' => 'E',   'Ю' => 'Yu',  'Я' => 'Ya',
    ];

    //Переменная в которой будет храниться модифицированная строка.
    $newStr = null;
    //Получаем массив из исходной строки.
    $inputArr = preg_split('//u', $input, null, PREG_SPLIT_NO_EMPTY);

    //Перебираем полученный массив.
    for ($i = 0; $i < count($inputArr); $i++) {
        //Если совпадения найдены - производим замену и записываем в новую строку.
        if (array_key_exists($inputArr[$i], $arr)) {
            $newStr .= $arr[$inputArr[$i]];
            //Если нет, то сохраняем, как есть.
        } else {
            $newStr .= $inputArr[$i];
        }
    }
    //Возвращаем модифицированную строку.
    return $newStr;
}

//Вызываем функцию транслитерации.
echo translit('Привет! Я строка состоящая из латинских символов...');


/* Написать функцию, которая заменяет в строке пробелы
на подчеркивания и возвращает видоизмененную строчку. */

/**
 * Функция находит проблелы и заменяет их знаком "_".
 * @param string $str передаваемая строка.
 * @return string возвращает модифицированную строку.
 */
function replace($str) {
    return str_replace(' ', '_', $str);
}

echo replace('У меня когда-то были пробелы между слов.');


/* В имеющемся шаблоне сайта заменить статичное меню (ul – li) на генерируемое через PHP. 
Необходимо представить пункты меню как элементы массива и вывести их циклом. 
Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать. */

/**
 * Функция генерирует многоуровневое меню.
 */
function menu() {
    //Массив с пунктами и подпунктами.
    $arrMenu = ['Главная' => ['Пункт 1', 'Пункт 2', 'Пункт 3'],
        'Каталог' => ['Пункт 1', 'Пункт 2', 'Пункт 3'],
        'Галерея' => ['Пункт 1', 'Пункт 2', 'Пункт 3'],
        'Отзывы' => ['Пункт 1', 'Пункт 2', 'Пункт 3'],
        'Контакты'];

    echo '<ul>';
    //Перебираем ключи со значениями и формирем меню.
    foreach ($arrMenu as $key => $value) {
        //Если пункт содержит подменю,
        if (is_string($key)) {
            echo '<li>' . $key . '<ul>';
            //то проходим по вложенному массиву и отображаем меню на странице.
            for ($i = 0; $i < count($value); $i++) {
                echo '<li>' . $value[$i] . '</li>';
            }
            echo '</ul>';
            //Если не содержит подменю - просто выводим на экран.
        } else {
            echo '<li>' . $value . '</li>';
        }
    }
};

//Вызываем функцию.
menu();
